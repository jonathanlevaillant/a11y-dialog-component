const Dialogs=(()=>{const e={pageClassName:"js-page",inertLayersClassName:"js-inert-layer",disabledPageClassName:"is-inactive"},t={tab:9,enter:13,escape:27},s=["[href]",'input:not([disabled]):not([type="hidden"])',"select:not([disabled])","textarea:not([disabled])","button:not([disabled])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'];class i{constructor(e){this.trigger=e.trigger,this.dialog=document.getElementById(e.dialog),this.dismissTriggers=this.dialog.querySelectorAll("[data-dismiss]"),this.focusableElements=this.dialog.querySelectorAll(s),[this.firstFocusableElement]=this.focusableElements,this.lastFocusableElement=this.focusableElements[this.focusableElements.length-1],[this.page]=document.getElementsByClassName(e.pageClassName),this.inertLayers=document.getElementsByClassName(e.inertLayersClassName),this.disabledPageClassName=e.disabledPageClassName,this.isNested=e.isNested,this.isOpen=e.isOpen,this.open=this.open.bind(this),this.close=this.close.bind(this),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this),this.isOpen&&this.open()}focusTrap(e){e.shiftKey&&e.target===this.firstFocusableElement&&(e.preventDefault(),this.lastFocusableElement.focus()),e.shiftKey||e.target!==this.lastFocusableElement||(e.preventDefault(),this.firstFocusableElement.focus())}setFocus(){this.focusableElements.length>0&&window.setTimeout(()=>{this.firstFocusableElement.focus()},100)}open(e){e&&e.preventDefault(),this.dialog.removeAttribute("aria-hidden"),this.isNested||(this.page.classList.add(this.disabledPageClassName),Array.prototype.forEach.call(this.inertLayers,e=>{e.setAttribute("aria-hidden",!0),e.setAttribute("inert","")})),this.setFocus(),this.addEventListeners()}close(e){e&&e.preventDefault(),this.dialog.setAttribute("aria-hidden",!0),this.isNested||(this.page.classList.remove(this.disabledPageClassName),Array.prototype.forEach.call(this.inertLayers,e=>{e.removeAttribute("aria-hidden"),e.removeAttribute("inert")})),this.trigger&&this.trigger.focus(),this.removeEventListeners()}addEventListeners(){this.dialog.addEventListener("click",this.onClick),this.dialog.addEventListener("touchstart",this.onClick),this.dialog.addEventListener("keydown",this.onKeydown),this.dismissTriggers.forEach(e=>{e.addEventListener("click",this.close)})}removeEventListeners(){this.dialog.removeEventListener("click",this.onClick),this.dialog.removeEventListener("touchstart",this.onClick),this.dialog.removeEventListener("keydown",this.onKeydown),this.dismissTriggers.forEach(e=>{e.removeEventListener("click",this.close)})}onClick(e){e.target===this.dialog&&this.close(e)}onKeydown(e){e.which===t.escape&&this.close(e),e.which===t.enter&&e.target.hasAttribute("data-dismiss")&&this.close(e),e.which===t.tab&&this.focusTrap(e)}render(){this.trigger&&(this.trigger.addEventListener("click",this.open),this.trigger.addEventListener("keydown",e=>{e.which===t.enter&&this.open(e)}))}}let a=null;return{open:(t,s=e)=>{const n=Object.assign({},e,s);n.dialog=t,n.trigger=!!s.trigger&&document.getElementById(s.trigger),n.isNested=s.isNested||!1,n.isOpen=!0,(a=new i(n)).render()},close:()=>{a.close()},render:(t='[data-component="dialog"]',s=e)=>{const a=document.querySelectorAll(t),n=Object.assign({},e,s);a.forEach(e=>{n.trigger=e,n.dialog=e.dataset.target,n.isNested="true"===e.dataset.nested,n.isOpen="true"===e.dataset.open,new i(n).render()})}}})();export default Dialogs;